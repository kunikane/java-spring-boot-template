/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package work.sys5.example.controller;

import io.swagger.annotations.*;
import java.util.List;
import java.util.Optional;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import work.sys5.example.model.ExampleItem;

@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.SpringCodegen",
        date = "2021-06-14T11:18:16.651486+09:00[Asia/Tokyo]")
@Validated
@Api(value = "ExampleItems", description = "the ExampleItems API")
public interface ExampleItemsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /example/items : For example returns items
     *
     * @param offset The number of items to skip before starting to collect the result set
     *     (optional)
     * @return items (status code 200)
     */
    @ApiOperation(
            value = "For example",
            nickname = "workSys5ExampleControllerGetItems",
            notes = "returns items",
            response = ExampleItem.class,
            responseContainer = "List",
            tags = {
                "exampleItems",
            })
    @ApiResponses(
            value = {
                @ApiResponse(
                        code = 200,
                        message = "items",
                        response = ExampleItem.class,
                        responseContainer = "List")
            })
    @GetMapping(
            value = "/example/items",
            produces = {"application/json"})
    default ResponseEntity<List<ExampleItem>> workSys5ExampleControllerGetItems(
            @ApiParam(
                            value =
                                    "The number of items to skip before starting to collect the result set")
                    @Valid
                    @RequestParam(value = "offset", required = false)
                    Integer offset) {
        getRequest()
                .ifPresent(
                        request -> {
                            for (MediaType mediaType :
                                    MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                                if (mediaType.isCompatibleWith(
                                        MediaType.valueOf("application/json"))) {
                                    String exampleString = "{ \"col1\" : \"col1\" }";
                                    ApiUtil.setExampleResponse(
                                            request, "application/json", exampleString);
                                    break;
                                }
                            }
                        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }
}
